{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xd23cee6dec3f1137a0ccf9d2431db7d0c70410c0fe06095dd7b50df1e9fa191a",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "945848",
    "logsBloom": "0x
    "blockHash": "0x52e04bc6881fc8ba430bad2cffea99b236bdb3559882a2681989855c390c7f60",
    "transactionHash": "0xd23cee6dec3f1137a0ccf9d2431db7d0c70410c0fe06095dd7b50df1e9fa191a",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "945848",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "5fd0bdae47632afc8fa9c7a90a69e966",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Andy\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"@dev Andy Group\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\nerror FundMe__NotOwner();\\n\\n/**@title A contract for crowd funding\\n * @author Andy\\n * @notice\\n * @dev Andy Group\\n */\\n\\ncontract FundMe {\\n    //type declarations\\n    using PriceConverter for uint256;\\n\\n    //State variables\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n    address public immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n    AggregatorV3Interface public priceFeed;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        // );\\n        return priceFeed.version();\\n    }\\n\\n    function balanceOf() public view returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\\\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback()\\n    //     /   \\\\\\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n}\\n\",\"keccak256\":\"0xe417e23c0dabffd1b309e90663e8607921ba86756fe5d4d2121439cfeb942667\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Rinkeby ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        // );\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x222f8b912c930f71a2d5b21cc91409442039a2fd5e7d3c53a901751ada1cd559\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200113238038062001132833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c610fba62000178600039600081816103eb015261067e0152610fba6000f3fe60806040526004361061008a5760003560e01c8063722713f711610059578063722713f714610140578063741bef1a1461016b578063b60d428814610196578063dba6335f146101a0578063dc0d3dff146101cb57610099565b80630d8e6e2c146100a35780633ccfd60b146100ce5780633e47d6f3146100d85780636b69a5921461011557610099565b3661009957610097610208565b005b6100a1610208565b005b3480156100af57600080fd5b506100b8610342565b6040516100c5919061087b565b60405180910390f35b6100d66103e9565b005b3480156100e457600080fd5b506100ff60048036038101906100fa91906108f9565b610629565b60405161010c919061087b565b60405180910390f35b34801561012157600080fd5b5061012a610641565b604051610137919061087b565b60405180910390f35b34801561014c57600080fd5b5061015561064e565b604051610162919061087b565b60405180910390f35b34801561017757600080fd5b50610180610656565b60405161018d9190610985565b60405180910390f35b61019e610208565b005b3480156101ac57600080fd5b506101b561067c565b6040516101c291906109af565b60405180910390f35b3480156101d757600080fd5b506101f260048036038101906101ed91906109f6565b6106a0565b6040516101ff91906109af565b60405180910390f35b6802b5e3af16b1880000610247600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106df90919063ffffffff16565b1015610288576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027f90610a80565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d69190610acf565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103ac57600080fd5b505afa1580156103c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e49190610b3a565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461046e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156105195760006001828154811061049457610493610b67565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061051190610b96565b915050610471565b50600067ffffffffffffffff81111561053557610534610bdf565b5b6040519080825280602002602001820160405280156105635781602001602082028036833780820191505090505b50600190805190602001906105799291906107bb565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105a090610c3f565b60006040518083038185875af1925050503d80600081146105dd576040519150601f19603f3d011682016040523d82523d6000602084013e6105e2565b606091505b5050905080610626576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061d90610ca0565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600047905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600181815481106106b057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106eb8361071b565b90506000670de0b6b3a764000085836107049190610cc0565b61070e9190610d49565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561076457600080fd5b505afa158015610778573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079c9190610df2565b5050509150506402540be400816107b39190610e6d565b915050919050565b828054828255906000526020600020908101928215610834579160200282015b828111156108335782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107db565b5b5090506108419190610845565b5090565b5b8082111561085e576000816000905550600101610846565b5090565b6000819050919050565b61087581610862565b82525050565b6000602082019050610890600083018461086c565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108c68261089b565b9050919050565b6108d6816108bb565b81146108e157600080fd5b50565b6000813590506108f3816108cd565b92915050565b60006020828403121561090f5761090e610896565b5b600061091d848285016108e4565b91505092915050565b6000819050919050565b600061094b6109466109418461089b565b610926565b61089b565b9050919050565b600061095d82610930565b9050919050565b600061096f82610952565b9050919050565b61097f81610964565b82525050565b600060208201905061099a6000830184610976565b92915050565b6109a9816108bb565b82525050565b60006020820190506109c460008301846109a0565b92915050565b6109d381610862565b81146109de57600080fd5b50565b6000813590506109f0816109ca565b92915050565b600060208284031215610a0c57610a0b610896565b5b6000610a1a848285016109e1565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a6a601b83610a23565b9150610a7582610a34565b602082019050919050565b60006020820190508181036000830152610a9981610a5d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ada82610862565b9150610ae583610862565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b1a57610b19610aa0565b5b828201905092915050565b600081519050610b34816109ca565b92915050565b600060208284031215610b5057610b4f610896565b5b6000610b5e84828501610b25565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610ba182610862565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610bd457610bd3610aa0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c29600083610c0e565b9150610c3482610c19565b600082019050919050565b6000610c4a82610c1c565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c8a600b83610a23565b9150610c9582610c54565b602082019050919050565b60006020820190508181036000830152610cb981610c7d565b9050919050565b6000610ccb82610862565b9150610cd683610862565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d0f57610d0e610aa0565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d5482610862565b9150610d5f83610862565b925082610d6f57610d6e610d1a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d9981610d7a565b8114610da457600080fd5b50565b600081519050610db681610d90565b92915050565b6000819050919050565b610dcf81610dbc565b8114610dda57600080fd5b50565b600081519050610dec81610dc6565b92915050565b600080600080600060a08688031215610e0e57610e0d610896565b5b6000610e1c88828901610da7565b9550506020610e2d88828901610ddd565b9450506040610e3e88828901610b25565b9350506060610e4f88828901610b25565b9250506080610e6088828901610da7565b9150509295509295909350565b6000610e7882610dbc565b9150610e8383610dbc565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ec257610ec1610aa0565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610eff57610efe610aa0565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f3c57610f3b610aa0565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f7957610f78610aa0565b5b82820290509291505056fea2646970667358221220a949ff329ab50ec9ac4619094de9c02a1e42d1654e0498320e7cd1ac1a646a5e64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c8063722713f711610059578063722713f714610140578063741bef1a1461016b578063b60d428814610196578063dba6335f146101a0578063dc0d3dff146101cb57610099565b80630d8e6e2c146100a35780633ccfd60b146100ce5780633e47d6f3146100d85780636b69a5921461011557610099565b3661009957610097610208565b005b6100a1610208565b005b3480156100af57600080fd5b506100b8610342565b6040516100c5919061087b565b60405180910390f35b6100d66103e9565b005b3480156100e457600080fd5b506100ff60048036038101906100fa91906108f9565b610629565b60405161010c919061087b565b60405180910390f35b34801561012157600080fd5b5061012a610641565b604051610137919061087b565b60405180910390f35b34801561014c57600080fd5b5061015561064e565b604051610162919061087b565b60405180910390f35b34801561017757600080fd5b50610180610656565b60405161018d9190610985565b60405180910390f35b61019e610208565b005b3480156101ac57600080fd5b506101b561067c565b6040516101c291906109af565b60405180910390f35b3480156101d757600080fd5b506101f260048036038101906101ed91906109f6565b6106a0565b6040516101ff91906109af565b60405180910390f35b6802b5e3af16b1880000610247600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106df90919063ffffffff16565b1015610288576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027f90610a80565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d69190610acf565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103ac57600080fd5b505afa1580156103c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e49190610b3a565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461046e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156105195760006001828154811061049457610493610b67565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061051190610b96565b915050610471565b50600067ffffffffffffffff81111561053557610534610bdf565b5b6040519080825280602002602001820160405280156105635781602001602082028036833780820191505090505b50600190805190602001906105799291906107bb565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105a090610c3f565b60006040518083038185875af1925050503d80600081146105dd576040519150601f19603f3d011682016040523d82523d6000602084013e6105e2565b606091505b5050905080610626576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061d90610ca0565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600047905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600181815481106106b057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106eb8361071b565b90506000670de0b6b3a764000085836107049190610cc0565b61070e9190610d49565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561076457600080fd5b505afa158015610778573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079c9190610df2565b5050509150506402540be400816107b39190610e6d565b915050919050565b828054828255906000526020600020908101928215610834579160200282015b828111156108335782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107db565b5b5090506108419190610845565b5090565b5b8082111561085e576000816000905550600101610846565b5090565b6000819050919050565b61087581610862565b82525050565b6000602082019050610890600083018461086c565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108c68261089b565b9050919050565b6108d6816108bb565b81146108e157600080fd5b50565b6000813590506108f3816108cd565b92915050565b60006020828403121561090f5761090e610896565b5b600061091d848285016108e4565b91505092915050565b6000819050919050565b600061094b6109466109418461089b565b610926565b61089b565b9050919050565b600061095d82610930565b9050919050565b600061096f82610952565b9050919050565b61097f81610964565b82525050565b600060208201905061099a6000830184610976565b92915050565b6109a9816108bb565b82525050565b60006020820190506109c460008301846109a0565b92915050565b6109d381610862565b81146109de57600080fd5b50565b6000813590506109f0816109ca565b92915050565b600060208284031215610a0c57610a0b610896565b5b6000610a1a848285016109e1565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a6a601b83610a23565b9150610a7582610a34565b602082019050919050565b60006020820190508181036000830152610a9981610a5d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ada82610862565b9150610ae583610862565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b1a57610b19610aa0565b5b828201905092915050565b600081519050610b34816109ca565b92915050565b600060208284031215610b5057610b4f610896565b5b6000610b5e84828501610b25565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610ba182610862565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610bd457610bd3610aa0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c29600083610c0e565b9150610c3482610c19565b600082019050919050565b6000610c4a82610c1c565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c8a600b83610a23565b9150610c9582610c54565b602082019050919050565b60006020820190508181036000830152610cb981610c7d565b9050919050565b6000610ccb82610862565b9150610cd683610862565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d0f57610d0e610aa0565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d5482610862565b9150610d5f83610862565b925082610d6f57610d6e610d1a565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d9981610d7a565b8114610da457600080fd5b50565b600081519050610db681610d90565b92915050565b6000819050919050565b610dcf81610dbc565b8114610dda57600080fd5b50565b600081519050610dec81610dc6565b92915050565b600080600080600060a08688031215610e0e57610e0d610896565b5b6000610e1c88828901610da7565b9550506020610e2d88828901610ddd565b9450506040610e3e88828901610b25565b9350506060610e4f88828901610b25565b9250506080610e6088828901610da7565b9150509295509295909350565b6000610e7882610dbc565b9150610e8383610dbc565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ec257610ec1610aa0565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610eff57610efe610aa0565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f3c57610f3b610aa0565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f7957610f78610aa0565b5b82820290509291505056fea2646970667358221220a949ff329ab50ec9ac4619094de9c02a1e42d1654e0498320e7cd1ac1a646a5e64736f6c63430008080033",
  "devdoc": {
    "author": "Andy",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "@dev Andy Group",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}